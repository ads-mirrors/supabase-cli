{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/supabase/cli/pkg/config/config",
  "$ref": "#/$defs/config",
  "$defs": {
    "BucketConfig": {
      "additionalProperties": {
        "$ref": "#/$defs/bucket"
      },
      "type": "object"
    },
    "FunctionConfig": {
      "additionalProperties": {
        "$ref": "#/$defs/function"
      },
      "type": "object"
    },
    "analytics": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable the local Logflare service.",
          "default": true
        },
        "port": {
          "type": "integer",
          "description": "Port to the local Logflare service.",
          "default": 54327
        },
        "backend": {
          "type": "string",
          "description": "Configure one of the supported backends: `postgres`",
          "default": "postgres"
        },
        "gcp_project_id": {
          "type": "string"
        },
        "gcp_project_number": {
          "type": "string"
        },
        "gcp_jwt_path": {
          "type": "string"
        },
        "vector_port": {
          "type": "integer",
          "description": "Port to the local syslog ingest service.",
          "default": 54328
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "api": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable the local PostgREST service.",
          "default": true
        },
        "port": {
          "type": "integer",
          "description": "Port to use for the API URL.",
          "default": 54321
        },
        "schemas": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Schemas to expose in your API. Tables",
          "default": [
            "public",
            "storage",
            "graphql_public"
          ]
        },
        "extra_search_path": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Extra schemas to add to the search_path of every request. public is always included.",
          "default": [
            "public",
            "extensions"
          ]
        },
        "max_rows": {
          "type": "integer",
          "description": "The maximum number of rows returned from a view",
          "default": 1000
        },
        "tls": {
          "$ref": "#/$defs/tlsKong"
        },
        "external_url": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "auth": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable the local GoTrue service.",
          "default": true
        },
        "site_url": {
          "type": "string",
          "description": "The base URL of your website. Used as an allow-list for redirects and for constructing URLs used in emails.",
          "default": "http://localhost:3000"
        },
        "additional_redirect_urls": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of _exact_ URLs that auth providers are permitted to redirect to post authentication.",
          "default": [
            "https://localhost:3000"
          ]
        },
        "jwt_expiry": {
          "type": "integer",
          "description": "How long tokens are valid for",
          "default": 3600
        },
        "enable_refresh_token_rotation": {
          "type": "boolean",
          "description": "If disabled",
          "default": true
        },
        "refresh_token_reuse_interval": {
          "type": "integer",
          "description": "Allows refresh tokens to be reused after expiry",
          "default": 10
        },
        "enable_manual_linking": {
          "type": "boolean",
          "default": false
        },
        "hook": {
          "$ref": "#/$defs/hook"
        },
        "mfa": {
          "$ref": "#/$defs/mfa"
        },
        "sessions": {
          "$ref": "#/$defs/sessions"
        },
        "enable_signup": {
          "type": "boolean",
          "description": "Allow/disallow new user signups to your project.",
          "default": true
        },
        "enable_anonymous_sign_ins": {
          "type": "boolean",
          "description": "Allow/disallow anonymous sign-ins to your project.",
          "default": true
        },
        "email": {
          "$ref": "#/$defs/email"
        },
        "sms": {
          "$ref": "#/$defs/sms"
        },
        "external": {
          "additionalProperties": {
            "$ref": "#/$defs/provider"
          },
          "type": "object"
        },
        "third_party": {
          "$ref": "#/$defs/thirdParty"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "bucket": {
      "properties": {
        "public": {
          "type": "boolean"
        },
        "file_size_limit": {
          "type": "integer"
        },
        "allowed_mime_types": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "objects_path": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "config": {
      "properties": {
        "project_id": {
          "type": "string",
          "description": "A string used to distinguish different Supabase projects on the same host. Defaults to the working directory name when running `supabase init`."
        },
        "api": {
          "$ref": "#/$defs/api",
          "description": "Configuration for the API service."
        },
        "db": {
          "$ref": "#/$defs/db",
          "description": "Configuration for the database service."
        },
        "realtime": {
          "$ref": "#/$defs/realtime",
          "description": "Configuration for the Realtime service."
        },
        "studio": {
          "$ref": "#/$defs/studio",
          "description": "Configuration for the Studio dashboard."
        },
        "inbucket": {
          "$ref": "#/$defs/inbucket",
          "description": "Configuration for the email testing server."
        },
        "storage": {
          "$ref": "#/$defs/storage",
          "description": "Configuration for the Storage service."
        },
        "auth": {
          "$ref": "#/$defs/auth",
          "description": "Configuration for the Auth service."
        },
        "edge_runtime": {
          "$ref": "#/$defs/edgeRuntime",
          "description": "Configuration for Edge Functions."
        },
        "functions": {
          "$ref": "#/$defs/FunctionConfig",
          "description": "Configuration for individual functions."
        },
        "analytics": {
          "$ref": "#/$defs/analytics",
          "description": "Configuration for the Analytics service."
        },
        "experimental": {
          "$ref": "#/$defs/experimental",
          "description": "Experimental features configuration."
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "project_id"
      ]
    },
    "db": {
      "properties": {
        "port": {
          "type": "integer",
          "description": "Port to use for the local database URL.",
          "default": 54322
        },
        "shadow_port": {
          "type": "integer",
          "description": "Port to use for the local shadow database.",
          "default": 54320
        },
        "major_version": {
          "type": "integer",
          "description": "The database major version to use. This has to be the same as your remote database's. Run `SHOW server_version;` on the remote database to check.",
          "default": 15
        },
        "pooler": {
          "$ref": "#/$defs/pooler"
        },
        "seed": {
          "$ref": "#/$defs/seed"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "edgeRuntime": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable the local Edge Functions service.",
          "default": true
        },
        "policy": {
          "type": "string",
          "description": "Configure one of the supported policies: `per_worker`",
          "default": "per_worker"
        },
        "inspector_port": {
          "type": "integer",
          "default": 54325
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "email": {
      "properties": {
        "enable_signup": {
          "type": "boolean",
          "description": "Allow/disallow new user signups via email to your project.",
          "default": true
        },
        "double_confirm_changes": {
          "type": "boolean",
          "description": "If enabled",
          "default": true
        },
        "enable_confirmations": {
          "type": "boolean",
          "description": "If enabled",
          "default": false
        },
        "secure_password_change": {
          "type": "boolean",
          "description": "If enabled",
          "default": true
        },
        "template": {
          "additionalProperties": {
            "$ref": "#/$defs/emailTemplate"
          },
          "type": "object"
        },
        "smtp": {
          "$ref": "#/$defs/smtp"
        },
        "max_frequency": {
          "type": "integer"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "emailTemplate": {
      "properties": {
        "subject": {
          "type": "string"
        },
        "content_path": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "experimental": {
      "properties": {
        "orioledb_version": {
          "type": "string"
        },
        "s3_host": {
          "type": "string"
        },
        "s3_region": {
          "type": "string"
        },
        "s3_access_key": {
          "type": "string"
        },
        "s3_secret_key": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "factorTypeConfiguration": {
      "properties": {
        "enroll_enabled": {
          "type": "boolean"
        },
        "verify_enabled": {
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "function": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Controls whether a function is deployed or served. When set to false"
        },
        "verifyJWT": {
          "type": "boolean",
          "description": "By default"
        },
        "importMapPath": {
          "type": "string",
          "description": "Specify the Deno import map file to use for the Function."
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "hook": {
      "properties": {
        "mfa_verification_attempt": {
          "$ref": "#/$defs/hookConfig"
        },
        "password_verification_attempt": {
          "$ref": "#/$defs/hookConfig"
        },
        "custom_access_token": {
          "$ref": "#/$defs/hookConfig"
        },
        "send_sms": {
          "$ref": "#/$defs/hookConfig"
        },
        "send_email": {
          "$ref": "#/$defs/hookConfig"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "hookConfig": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable the local hook service."
        },
        "uri": {
          "type": "string",
          "description": "The URL of the hook service."
        },
        "secrets": {
          "type": "string",
          "description": "The secrets for the hook service."
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "imageTransformation": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "inbucket": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable the local InBucket service.",
          "default": true
        },
        "port": {
          "type": "integer",
          "description": "Port to use for the email testing server web interface.",
          "default": 54324
        },
        "smtp_port": {
          "type": "integer",
          "description": "Port to use for the email testing server SMTP port.",
          "default": 54325
        },
        "pop3_port": {
          "type": "integer",
          "description": "Port to use for the email testing server POP3 port.",
          "default": 54326
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "messagebirdConfig": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable MessageBird for sending SMS messages."
        },
        "originator": {
          "type": "string",
          "description": "The MessageBird originator."
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "mfa": {
      "properties": {
        "totp": {
          "$ref": "#/$defs/factorTypeConfiguration"
        },
        "phone": {
          "$ref": "#/$defs/phoneFactorTypeConfiguration"
        },
        "max_enrolled_factors": {
          "type": "integer"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "phoneFactorTypeConfiguration": {
      "properties": {
        "enroll_enabled": {
          "type": "boolean"
        },
        "verify_enabled": {
          "type": "boolean"
        },
        "otp_length": {
          "type": "integer"
        },
        "template": {
          "type": "string"
        },
        "max_frequency": {
          "type": "integer"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "pooler": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable the local PgBouncer service.",
          "default": false
        },
        "port": {
          "type": "integer",
          "description": "Port to use for the local connection pooler.",
          "default": 54329
        },
        "pool_mode": {
          "type": "string",
          "description": "Specifies when a server connection can be reused by other clients. Configure one of the supported pooler modes: `transaction`",
          "default": "transaction"
        },
        "default_pool_size": {
          "type": "integer",
          "description": "How many server connections to allow per user/database pair.",
          "default": 20
        },
        "max_client_conn": {
          "type": "integer",
          "description": "Maximum number of client connections allowed.",
          "default": 100
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "provider": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable the provider for authentication."
        },
        "client_id": {
          "type": "string",
          "description": "The provider client ID."
        },
        "secret": {
          "type": "string",
          "description": "The provider secret."
        },
        "url": {
          "type": "string",
          "description": "The provider URL."
        },
        "redirect_uri": {
          "type": "string",
          "description": "The provider redirect URI."
        },
        "skip_nonce_check": {
          "type": "boolean",
          "description": "Skip nonce check for the provider."
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "realtime": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable the local Realtime service.",
          "default": true
        },
        "ip_version": {
          "type": "string",
          "description": "Bind realtime via either IPv4 or IPv6. (default: IPv6)",
          "default": "IPv6"
        },
        "max_header_length": {
          "type": "integer",
          "default": 4096
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "seed": {
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "sessions": {
      "properties": {
        "timebox": {
          "type": "integer",
          "description": "The maximum duration of a session."
        },
        "inactivity_timeout": {
          "type": "integer",
          "description": "The maximum duration of inactivity before a session is terminated."
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "sms": {
      "properties": {
        "enable_signup": {
          "type": "boolean",
          "description": "Allow/disallow new user signups via SMS to your project.",
          "default": true
        },
        "enable_confirmations": {
          "type": "boolean",
          "description": "If enabled",
          "default": false
        },
        "template": {
          "type": "string",
          "description": "The template to use for SMS messages."
        },
        "twilio": {
          "$ref": "#/$defs/twilioConfig"
        },
        "twilio_verify": {
          "$ref": "#/$defs/twilioConfig"
        },
        "messagebird": {
          "$ref": "#/$defs/messagebirdConfig"
        },
        "textlocal": {
          "$ref": "#/$defs/textlocalConfig"
        },
        "vonage": {
          "$ref": "#/$defs/vonageConfig"
        },
        "test_otp": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Test OTP codes for development."
        },
        "max_frequency": {
          "type": "integer",
          "description": "The maximum frequency of SMS messages that can be sent."
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "smtp": {
      "properties": {
        "host": {
          "type": "string",
          "description": "Hostname or IP address of the SMTP server.",
          "default": "inbucket"
        },
        "port": {
          "type": "integer",
          "description": "Port number of the SMTP server.",
          "default": 2500
        },
        "user": {
          "type": "string",
          "description": "Username for authenticating with the SMTP server."
        },
        "pass": {
          "type": "string",
          "description": "Password for authenticating with the SMTP server."
        },
        "admin_email": {
          "type": "string",
          "description": "Email address of the administrator.",
          "default": "admin@email.com"
        },
        "sender_name": {
          "type": "string",
          "description": "Name used as the sender for emails sent from the application."
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "storage": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable the local Storage service.",
          "default": true
        },
        "file_size_limit": {
          "type": "integer",
          "description": "The maximum file size allowed (e.g. `5MB`"
        },
        "image_transformation": {
          "$ref": "#/$defs/imageTransformation"
        },
        "buckets": {
          "$ref": "#/$defs/BucketConfig"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "studio": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable the local Supabase Studio dashboard.",
          "default": true
        },
        "port": {
          "type": "integer",
          "description": "Port to use for Supabase Studio.",
          "default": 54323
        },
        "api_url": {
          "type": "string",
          "description": "External URL of the API server that frontend connects to.",
          "default": "http://localhost"
        },
        "openai_api_key": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "textlocalConfig": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable Textlocal for sending SMS messages."
        },
        "sender": {
          "type": "string",
          "description": "The Textlocal sender."
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "thirdParty": {
      "properties": {
        "firebase": {
          "$ref": "#/$defs/tpaFirebase"
        },
        "auth0": {
          "$ref": "#/$defs/tpaAuth0"
        },
        "aws_cognito": {
          "$ref": "#/$defs/tpaCognito"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "tlsKong": {
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "tpaAuth0": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "tenant": {
          "type": "string"
        },
        "tenant_region": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "tpaCognito": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "user_pool_id": {
          "type": "string"
        },
        "user_pool_region": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "tpaFirebase": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "project_id": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "twilioConfig": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable Twilio for sending SMS messages."
        },
        "account_sid": {
          "type": "string",
          "description": "The Twilio account SID."
        },
        "message_service_sid": {
          "type": "string",
          "description": "The Twilio message service SID."
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "vonageConfig": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable Vonage for sending SMS messages."
        },
        "from": {
          "type": "string",
          "description": "The Vonage sender."
        }
      },
      "additionalProperties": false,
      "type": "object"
    }
  }
}
